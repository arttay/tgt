[{"/Users/49754518/Documents/dev/tgt/src/index.js":"1","/Users/49754518/Documents/dev/tgt/src/Listing/Listing.js":"2","/Users/49754518/Documents/dev/tgt/src/Search/ByRoute/ByRoute.js":"3","/Users/49754518/Documents/dev/tgt/src/Search/ByStop/ByStop.js":"4","/Users/49754518/Documents/dev/tgt/src/caseApp/CaseApp.js":"5"},{"size":500,"mtime":1607183520670,"results":"6","hashOfConfig":"7"},{"size":1663,"mtime":1607201119250,"results":"8","hashOfConfig":"7"},{"size":3049,"mtime":1607187213544,"results":"9","hashOfConfig":"7"},{"size":1070,"mtime":1607200426976,"results":"10","hashOfConfig":"7"},{"size":5786,"mtime":1607199475777,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"78fag0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/49754518/Documents/dev/tgt/src/index.js",[],["24","25"],"/Users/49754518/Documents/dev/tgt/src/Listing/Listing.js",[],"/Users/49754518/Documents/dev/tgt/src/Search/ByRoute/ByRoute.js",["26","27","28"],"import { Select, MenuItem, FormHelperText } from '@material-ui/core';\n\nimport Listing from \"../../Listing/Listing.js\"\n\nfunction ByRoute(props) {\n    const { selectedRoute, selectedDirection, selectedDirections, directions, stops, selectedStop, stopTimes, isRoute, showSearchResults } = props\n    const handleNewSelection = (e) => {\n        const routeNumber = e.target.value\n        const routeObj = props.routes.find(item => item.route_id === routeNumber)\n        props.setNewRoute(routeObj)\n    }\n\n\n    const handleNewDirectionSelection = (e) => {\n        const directionNumber = e.target.value\n        const routeObj = props.directions.find(item => item.direction_id === directionNumber)\n\n        props.handleUserSelectedNewDirection(routeObj)\n    }\n\n    const handleNewStopSelection = (e) => {\n        const stopNumber = e.target.value\n        const routeObj = props.stops.find(item => item.place_code === stopNumber)\n\n        props.handleUserSelectedNewStop(routeObj)\n    }\n\n  return (\n    <div className=\"App\">\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"tgt-route-select\"\n          value={props.selectedRoute}\n          displayEmpty\n          onChange={handleNewSelection}\n        >\n            <MenuItem value=\"default\" key=\"default\" disabled>Select Route</MenuItem>\n            {props.routes.map(item => (\n                <MenuItem className={`tgt-route-${item.route_id}`} value={item.route_id} key={item.route_id}>{item.route_label}</MenuItem>\n            ))}\n        </Select>\n\n      {directions && selectedRoute && (\n          <div>\n            <Select\n            labelId=\"demo-simple-select-required-label\"\n            id=\"tgt-direction-select\"\n            value={selectedDirections}\n            displayEmpty\n            onChange={handleNewDirectionSelection}\n            >\n                <MenuItem value=\"default\" disabled>\n                Select a Direction\n            </MenuItem>\n                {props.directions.map(item => (\n                    <MenuItem className={`tgt-direction-${item.direction_id}`} value={item.direction_id} key={item.direction_id}>{item.direction_name}</MenuItem>\n                ))}\n            </Select>\n          </div>\n      )}\n\n      {stops && selectedDirections && (\n          <div>\n          <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"tgt-stop-select\"\n          value={selectedStop}\n          displayEmpty\n          onChange={handleNewStopSelection}\n          >\n              <MenuItem value=\"default\" disabled>\n              Select a Stop\n          </MenuItem>\n              {props.stops.map(item => (\n                  <MenuItem className={`tgt-stop-${item.place_code}`} value={item.place_code} key={item.place_code}>{item.description}</MenuItem>\n              ))}\n          </Select>\n        </div>\n      )}\n\n      {stopTimes && \n      selectedStop && \n      isRoute && (\n        <div>\n          <Listing data={stopTimes} httpError={props.httpError} />\n        </div>\n      )}\n\n    </div>\n  );\n}\n\nexport default ByRoute;\n","/Users/49754518/Documents/dev/tgt/src/Search/ByStop/ByStop.js",[],"/Users/49754518/Documents/dev/tgt/src/caseApp/CaseApp.js",["29","30","31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":28,"nodeType":"40","messageId":"41","endLine":1,"endColumn":42},{"ruleId":"38","severity":1,"message":"42","line":6,"column":28,"nodeType":"40","messageId":"41","endLine":6,"endColumn":45},{"ruleId":"38","severity":1,"message":"43","line":6,"column":120,"nodeType":"40","messageId":"41","endLine":6,"endColumn":137},{"ruleId":"38","severity":1,"message":"44","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":64,"column":6,"nodeType":"47","endLine":64,"endColumn":8,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":71,"column":6,"nodeType":"47","endLine":71,"endColumn":16,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":159,"column":40,"nodeType":"53","messageId":"54","endLine":159,"endColumn":41,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":184,"column":11,"nodeType":"58","endLine":184,"endColumn":28},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","'selectedDirection' is assigned a value but never used.","'showSearchResults' is assigned a value but never used.","'logo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.direction', 'params.route', 'params.stop', 'selectedDirections', 'selectedRoute', and 'selectedStop'. Either include them or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has missing dependencies: 'params.direction', 'params.route', and 'params.stop'. Either include them or remove the dependency array.",["62"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["63","64"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"messageId":"69","fix":"70","desc":"71"},{"messageId":"72","fix":"73","desc":"74"},"Update the dependencies array to be: [params.direction, params.route, params.stop, selectedDirections, selectedRoute, selectedStop]",{"range":"75","text":"76"},"Update the dependencies array to be: [location, params.direction, params.route, params.stop]",{"range":"77","text":"78"},"removeEscape",{"range":"79","text":"80"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"81","text":"82"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1772,1774],"[params.direction, params.route, params.stop, selectedDirections, selectedRoute, selectedStop]",[1953,1963],"[location, params.direction, params.route, params.stop]",[4657,4658],"",[4657,4657],"\\"]